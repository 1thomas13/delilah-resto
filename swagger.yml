openapi: "3.0.0"
info:
  title: API-Delilah-Resto
  version: "0.1"
  description: Api para el restaurante Delilah Resto

servers:
  - url: http://localhost:3000

paths:
  /users/{id}:
    get:
      tags:
        - Usuarios/Users
      summary: Mostrar todos los usuarios
      description: Muestra todos los usuarios. Requiere se ADMIN
      responses:
        "200":
          description: Muestra los usuarios con sus datos y solo el administrador puede verlos

        "400":
          description: Debes logearte y ser administrador
          content:
            application/json:
              schema:
                type: object
                example: {'message': Debes estar logeado'}
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ingresar el  ID del usuario

  /users:
    post:
      tags:
        - Usuarios/Users
      summary: Crear usuario
      description: Permite crear usuarios
      responses:
        "201":
          description: Usuario creado
        "400":
          description: Email repetido
          content:
            application/json:
              schema:
                type: object
                example: {'message': Ya existe una cuenta con ese mail'}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name
                  example: Juanma
                username:
                  type: string
                  description: nombre de usuario
                  example: Juan0107
                password:
                  type: string
                  description: constraseña
                  example: 123asd
                email:
                  type: string
                  description: Email del usuario
                  example: juan@gmail.com
                numberPhone:
                  type: integer
                  description: numero de telefono
                  example: 123456
                address:
                  type: string
                  description: domicilio
                  example: belgrano 123
                isAdmin:
                  type: boolean
                  description: Usuario administrador(siempre con usuarios creados va a devolver falso)
                  example: true
                isLogged:
                  type: boolean
                  description: Muestra si el usuario esta logeado
                  example: true

  /users/login:
    post:
      tags:
        - Usuarios/Users
      summary: Login
      description: Permite logearse
      responses:
        "201":
          description: Sesion iniciada
        "400":
          description: error de coincidencia
          content:
            application/json:
              schema:
                type: object
                example: {'message': El nombre de usuario o el email no coincide con la contraseña'}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Nombre de usuario
                  example: Juan0107
                email:
                  type: string
                  description: email del usuario
                  example: juan@gmail.com
                password:
                  type: string
                  description: Contraseña del usuario
                  example: 123asd

  /orders/allOrders/{id}:
    get:
      tags:
        - Pedidos/Orders
      summary: Mostrar todas las ordenes
      description: Muestra las ordenes. Requiere se ADMIN
      responses:
        "200":
          description: Muestra las ordenes satisfactoriamente
            sucess
        "400":
          description: Se requiere de estar logeo y ser admin
          content:
            application/json:
              schema:
                type: object
                example: {'message': No estar logeado'}
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ingresar el  ID del usuario

  /orders/status/{id}/{numOrder}:
    put:
      tags:
        - Pedidos/Orders
      summary: Cambiar el estado de una orden
      description: Cambia el estado de las ordenes. Requiere ser ADMIN
      responses:
        "200":
          description: Estado del pedido modificado
            sucess
        "400":
          description: Se requiere de estar logeo y ser admin
          content:
            application/json:
              schema:
                type: object
                example: {'message': Debes ser administrador'}
        "404":
          description: El numero de orden y el numero de pedido tienen que existir
          content:
            application/json:
              schema:
                type: object
                example: {'message': El numero de orden no existe'}
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ingresar el  ID del usuario

        - in: path
          name: numOrder
          schema:
            type: integer
          required: true
          description: ingresar el numero de orden

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: Se ingresa un numero de estado para modificar el pedido
                  example: 2

  /orders/{id}:
    post:
      tags:
        - Pedidos/Orders
      summary: Crear pedidos
      description: Permite crear pedidos. Si hacer un pedido con mas de 1 producto se debe agregar otro objeto al array con sus 2 propiedades(productId y amount)
      responses:
        "201":
          description: Pedido creado
          content:
            application/json:
              schema:
                type: object
                example: {'message': El total es de 100$ y el pago seleccionado es efectivo. Debe confirmar el pedido para continuar'}
        "400":
          description: Se requiere estar logeado, el producto debe estar disponible y el metodo de pago existir
          content:
            application/json:
              schema:
                type: object
                example: {'message': El producto no esta disponible'}
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ingresar el  ID del usuario

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  type: array
                  description: Array de pedidos. Si quiere pedir mas de un producto diferente se le debe agregar otro objeto al array con sus 2 propiedades(productId y amount)
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                        example: 1
                      amount:
                        type: integer
                        example: 2
                    
                paymentMethodId:
                  type: integer
                  example: 1
                destinationAddress:
                  type: array
                  example: Mendoza 231

  /orders/confirm/{id}/{numOrder}:
    get:
      tags:
        - Pedidos/Orders
      summary: Confirmar pedido
      description: Permite a los clientes confirmar su pedido
      responses:
          "201":
            description: Pedido confirmado
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Se confirmo el pedido'}
          "400":
            description: Se requiere de estar logeado y el numero de orden tiene que existir y pertenecer al usuario
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': El numero de orden no le pertenece al usuario}
      parameters:
          - in: path
            name: id
            schema:
              type: integer
            required: true
            description: ingresar el  ID del usuario

          - in: path
            name: numOrder
            schema:
              type: integer
            required: true
            description: ingresar el numero de orden a confirmar
  
  /orders/{id}/{numOrder}:
    put:
      tags:
        - Pedidos/Orders
      summary: Modificar pedido
      description: Permite modificar el pedido siempre y cuando el mismo no este confirmado 
      responses:
          "201":
            description: Pedido modificado
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': pedido modificado'}
          "400":
            description: Se requiere de estar logeado, el pedido debe ser valido, no debe estar confirmado y debe pertenecer al usuario
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': No puede modificar el pedido seleccionado'}
      parameters:
          - in: path
            name: id
            schema:
              type: integer
            required: true
            description: ingresar el  ID del usuario

          - in: path
            name: numOrder
            schema:
              type: integer
            required: true
            description: ingresar el numero de orden a confirmar

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  type: array
                  description: Array de pedidos. Si quiere pedir mas de un producto diferente se le debe agregar otro objeto al array con sus 2 propiedades(productId y amount)
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                        example: 1
                      amount:
                        type: integer
                        example: 2
                    
                paymentMethodId:
                  type: integer
                  example: 1
                destinationAddress:
                  type: array
                  example: Mendoza 231

  /orders/history/{id}:
    get:
      tags:
        - Pedidos/Orders
      summary: Ver historial
      description: Permite a los usuarios ver su historial
      responses:
          "201":
            description: Pedido modificado
          "400":
            description: Se requiere de estar logeado, y tener pedidos
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': No hiciste ningun pedido'}
      parameters:
          - in: path
            name: id
            schema:
              type: integer
            required: true
            description: ingresar el  ID del usuario

  /products/{id}:
    get:
      tags:
        - Productos/Products 
      summary: Ver todos los productos
      description: Permite a los administradores ver el menu de los productos existentes
      responses:
          "200":
            description: Muestra los productos
          "400":
            description: Se requiere de estar logeado  y ser administrador
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': No estas logeado'}
      parameters:
          - in: path
            name: id
            schema:
              type: integer
            required: true
            description: ingresar el  ID del usuario
        
  /products/add/{id}:
    post:
      tags:
        - Productos/Products 
      summary: Agregar producto
      description: Permite agregar productos. Requiere ser ADMIN
      responses:
          "200":
            description: Agrega un producto
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Producto agregado!}
          "400":
            description: Se requiere de estar logeado  y ser administrador
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': No estas logeado'}
      parameters:
          - in: path
            name: id
            schema:
              type: integer
            required: true
            description: ingresar el  ID del usuario
      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nombre del producto
                  example: Choripan
                price:
                  type: integer
                  description: Precio del producto
                  example: 500
                available:
                  type: boolean
                  description: Se indica si el producto esta disponible
                  example: true

  /products/{id}/{productid}:
    put:
      tags:
        - Productos/Products 
      summary: Modificar producto
      description: Permite a los administradores modificar productos
      responses:
          "200":
            description: Modifica un producto
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Producto modificado!}
          "400":
            description: Se requiere de estar logeado, ser administrador y el producto debe existir
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': El id del producto no existe'}
      parameters:
          - in: path
            name: id
            schema:
              type: integer
            required: true
            description: ingresar el  ID del usuario
          - in: path
            name: productid
            schema:
              type: integer
            required: true
            description: Ingresar el id del producto a modificar
      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nombre del producto
                  example: Choripan
                price:
                  type: integer
                  description: Precio del producto
                  example: 500
                available:
                  type: boolean
                  description: Se indica si el producto esta disponible
                  example: true

  /products/delete/{id}/{productid}:
    delete:
      tags:
        - Productos/Products 
      summary: Eliminar producto
      description: Permite a los administradores eliminar productos
      responses:
          "200":
            description: Elimina un producto
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Producto eliminado!}
          "400":
            description: Se requiere de estar logeado, ser administrador y el producto debe existir
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': El id del producto no existe'}
      parameters:
          - in: path
            name: id
            schema:
              type: integer
            required: true
            description: ingresar el  ID del usuario
          - in: path
            name: productid
            schema:
              type: integer
            required: true
            description: Ingresar el id del producto a modificar

  /payment/{id}:
    get:
      tags:
        - Metodo de pagos/Payment Methods 
      summary: Ver metodos de pago
      description: Permite a los administradores ver los metodos de pago
      responses:
          "200":
            description: Muestra los metodos de pago
          "400":
            description: Se requiere de estar logeado  y ser administrador
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': No estas logeado'}
      parameters:
          - in: path
            name: id
            schema:
              type: integer
            required: true
            description: ingresar el  ID del Usuario
        
  /payment/create/{id}:
    post:
      tags:
        - Metodo de pagos/Payment Methods 
      summary: Crear metodo de pago
      description: Permite a los administradores crear metodos de pago
      responses:
          "200":
            description: Metodo de pago creado
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Metodo de pago creado!}
          "400":
            description: Se requiere de estar logeado  y ser administrador
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': No estas logeado'}
      parameters:
          - in: path
            name: id
            schema:
              type: integer
            required: true
            description: ingresar el  ID del usuario
      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                method:
                  type: string
                  description: Nombre del metodo de pago
                  example: Bitcoin

  /payment/{id}/{paymentMethod}:
    put:
      tags:
        - Metodo de pagos/Payment Methods 
      summary: Editar metodo de pago
      description: Permite a los administradores editar metodos de pago
      responses:
          "200":
            description: Modifica los metodos de pago
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Metodo de pago creado!}
          "400":
            description: error Se requiere de estar logeado, ser administrador y el metodo de pago debe existir
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': El metodo de pago seleccionado no existe'}
      parameters:
          - in: path
            name: id
            schema:
              type: integer
            required: true
            description: ingresar el  ID del usuario
          - in: path
            name: paymentMethod
            schema:
              type: integer
            required: true
            description: Ingresar el ID del metodo de pago

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                method:
                  type: string
                  description: Nombre del metodo de pago
                  example: MercadoPago
                id:
                  type: integer
                  description: Id del metodo de pago
                  example: 1

  /payment/delete/{id}/{paymentMethod}:
    delete:
      tags:
        - Metodo de pagos/Payment Methods 
      summary: Eliminar metodo de pago
      description: Permite a los administradores eliminar metodos de pago
      responses:
          "200":
            description: Modifica los metodos de pago
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Metodo de pago eliminado!}
          "400":
            description: error Se requiere de estar logeado, ser administrador y el metodo de pago debe existi
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': No eres administrador'}
      parameters:
          - in: path
            name: id
            schema:
              type: integer
            required: true
            description: ingresar el  ID del usuario
          - in: path
            name: paymentMethod
            schema:
              type: integer
            required: true
            description: Ingresar el ID del metodo de pago