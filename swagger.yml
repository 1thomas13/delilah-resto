openapi: "3.0.0"
info:
  title: API-Delilah-Resto
  version: "1.2"
  description: Api para el restaurante Delilah Resto

servers:
  - url: http://localhost:3000

paths:
  /users/all:
    get:
      tags:
        - Usuarios/Users
      summary: Mostrar todos los usuarios
      description: Muestra todos los usuarios. Requiere ser ADMIN
      parameters:
        - in: path
          name: authorization
          schema:
            type: string
          required: true
          description : token

      responses:
        "200":
          description: Muestra los usuarios con sus datos y solo el administrador puede verlos
        "400":
          description: Debes logearte Y tu token tiene que ser valido
          content:
            application/json:
              schema:
                type: object
                example: {'message': token invalido'}
        "403":
          description: Debes ser administrador
          content:
            application/json:
              schema:
                type: object
                example: {'message': Debes ser administrador para acceder'}
  /users:
    post:
      tags:
        - Usuarios/Users
      summary: Crear usuario
      description: Permite crear usuarios
      responses:
        "201":
          description: Usuario creado
        "400":
          description: Email repetido
          content:
            application/json:
              schema:
                type: object
                example: {'message': Ya existe una cuenta con ese mail'}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name
                  example: Juanma
                username:
                  type: string
                  description: nombre de usuario
                  example: Juan0107
                password:
                  type: string
                  description: constraseña
                  example: 123asd
                email:
                  type: string
                  description: Email del usuario
                  example: juan@gmail.com
                numberPhone:
                  type: integer
                  description: numero de telefono
                  example: 123456
  /users/login:
    post:
      tags:
        - Usuarios/Users
      summary: Login
      description: Permite logearse
      responses:
        "201":
          description: Sesion iniciada
        "400":
          description: error de coincidencia
          content:
            application/json:
              schema:
                type: object
                example: {'error': Creedenciales incorrectas'}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: email del usuario
                  example: "admin@gmail.com"
                password:
                  type: string
                  description: Contraseña del usuario
                  example: 1234

  /users/suspendUser/{suspendedUserId}:
    put:
      tags:
        - Usuarios/Users
      summary: Suspender usuario
      description: El admininstrador puede suspender usuarios que no lo sean
      parameters:
        - name: suspendedUserId
          in: path
          schema:
            type: integer
          required: true
          description: ingresar el  ID del usuario a suspender
          
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          description : Ingresar el token del Login
      responses:
        "200":
          description: Usuario suspendido
        "403":
          description: Debe ser administrador para suspender un usuario
          content:
            application/json:
              schema:
                type: object
                example: {'error:Debes ser administrador'}
        "400":
          description: El token no es valido
          content:
            application/json:
              schema:
                type: object
                example: {'err: Tokenn invalido'}

  ##Direcciones

  /address:
    get:
      tags:
        - "Direcciones/Address"
      summary: Muestra todas las direcciones
      description: Muestra todoas las direcciones del usuario
      responses:
        "200":
          description: Muestra las direcciones del usuario en cuestion
            sucess
        "400":
          description: Debes logearte Y tu token tiene que ser valido
          content:
            application/json:
              schema:
                type: object
                example: {'message': token invalido'}
      parameters:

        - name: authorization
          in: header
          schema:
            type: string
          required: true
          description : Ingresar el token del Login
  
    post:
      tags:
        - "Direcciones/Address"
      summary: Crear Dureccion
      description: Permite que el usuario agregue una direccion
      responses:
        "200":
          description: Agregue la direccion satisfactoriamente
            sucess
        "400":
          description: Debes logearte Y tu token tiene que ser valido
          content:
            application/json:
              schema:
                type: object
                example: {'message': token invalido'}
      parameters:

        - name: authorization
          in: header
          schema:
            type: string
          required: true
          description : Ingresar el token del Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                addressId:
                  type: string
                  example: Avenida 032
  
  /address/{addressId:}:
    put:
      tags:
        - "Direcciones/Address"
      summary: Modificar las direcciones
      description: Permite modificar las direcciones de los usuarios
      responses:
        "200":
          description: Direccion modificada correctamente
            sucess
        "400":
          description: Debes logearte, tu token tiene que ser valido y el id de la direccion debe pertenecerle al usuario en cuestion
          content:
            application/json:
              schema:
                type: object
                example: {'message': token invalido'}
      parameters:

        - name: authorization
          in: header
          schema:
            type: string
          required: true
          description : Ingresar el token del Login

        - in: path
          name: addressId
          schema:
            type: integer
          required: true
          description: ingresar el  ID de la direccion a modificar
    delete:
      tags:
        - "Direcciones/Address"
      summary: Eliminar las direcciones
      description: Permite eliminar las direcciones de los usuarios
      responses:
        "200":
          description: Direccion eliminar correctamente
            sucess
        "400":
          description: Debes logearte, tu token tiene que ser valido y el id de la direccion debe pertenecerle al usuario en cuestion
          content:
            application/json:
              schema:
                type: object
                example: {'message': token invalido'}
      parameters:

        - name: authorization
          in: header
          schema:
            type: string
          required: true
          description : Ingresar el token del Login

        - in: path
          name: addressId
          schema:
            type: integer
          required: true
          description: ingresar el  ID de la direccion a eliminar
  ####ORDERS

  /orders/allOrders:
    get:
      tags:
        - Pedidos/Orders
      summary: Mostrar todas las ordenes
      description: Muestra las ordenes. Requiere se ADMIN
      responses:
        "200":
          description: Muestra las ordenes satisfactoriamente
            sucess
        "400":
          description: Debes logearte Y tu token tiene que ser valido
          content:
            application/json:
              schema:
                type: object
                example: {'message': token invalido'}
        "403":
          description: Debes ser administrador
          content:
            application/json:
              schema:
                type: object
                example: {'message': Debes ser administrador para acceder'}
      parameters:

        - name: authorization
          in: header
          schema:
            type: string
          required: true
          description : Ingresar el token del Login

  /orders/status/{idOrder}:
    patch:
      tags:
        - Pedidos/Orders
      summary: Cambiar el estado de una orden
      description: Cambia el estado de las ordenes. Requiere ser ADMIN
      responses:
        "200":
          description: Estado del pedido modificado
            sucess
        "400":
          description: Debes logearte, tu token tiene que ser valido y el id debe pertenecer a un pedido existe
          content:
            application/json:
              schema:
                type: object
                example: {'message': token invalido'}
        "403":
          description: Debes ser administrador
          content:
            application/json:
              schema:
                type: object
                example: {'message': Debes ser administrador para acceder'}
      parameters:
        - in: path
          name: idOrder
          schema:
            type: integer
          required: true
          description: ingresar el  ID del pedido a modificar su estado
        
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          description : Ingresar el token del Login

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: Se ingresa un numero de estado para modificar el pedido
                  example: 2

  /orders:
    post:
      tags:
        - Pedidos/Orders
      summary: Crear pedidos
      description: Permite crear pedidos. Si hacer un pedido con mas de 1 producto se debe agregar otro objeto al array con sus 2 propiedades(productId y amount)
      responses:
        "201":
          description: Pedido creado
          content:
            application/json:
              schema:
                type: object
                example: {'message': El total es de 100$ y el pago seleccionado es efectivo. Debe confirmar el pedido para continuar'}
        "400":
          description: Debes logearte, tu token tiene que ser valido, Debe ser valido el metodo de pago y la direccion
          content:
            application/json:
              schema:
                type: object
                example: {'message': token invalido'}
  
      parameters:
  
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          description : Ingresar el token del Login

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  type: array
                  description: Array de pedidos. Si quiere pedir mas de un producto diferente se le debe agregar otro objeto al array con sus 2 propiedades(productId y amount)
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                        example: 1
                      amount:
                        type: integer
                        example: 2
                    
                paymentMethodId:
                  type: integer
                  example: 1
                addressId:
                  type: integer
                  example: 1

  /orders/confirm/{idOrder}:
    patch:
      tags:
        - Pedidos/Orders
      summary: Confirmar pedido
      description: Permite a los clientes confirmar su pedido
      responses:
          "201":
            description: Pedido confirmado
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Se confirmo el pedido'}
          "400":
            description: Debes logearte, tu token tiene que ser valido y el Id del pedido tiene que pertenecer a uno de sus pedidos
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': token invalido'}
        
      parameters:
          - in: path
            name: idOrder
            schema:
              type: integer
            required: true
            description: ingresar el numero de orden a confirmar
         
          - name: authorization
            in: header
            schema:
              type: string
            required: true
            description : Ingresar el token del Login
  
  /orders/{numOrder}:
    put:
      tags:
        - Pedidos/Orders
      summary: Modificar pedido
      description: Permite modificar el pedido siempre y cuando el mismo no este confirmado 
      responses:
          "201":
            description: Pedido modificado
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': pedido modificado'}
          "400":
            description: Debes logearte, tu token tiene que ser valido y el Id del pedido tiene que pertenecer a uno de sus pedidos
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': token invalido'}
      parameters:
  
          - in: path
            name: numOrder
            schema:
              type: integer
            required: true
            description: ingresar el numero de orden a confirmar
          
         
          - name: authorization
            in: header
            schema:
              type: string
            required: true
            description : Ingresar el token del Login

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  type: array
                  description: Array de pedidos. Si quiere pedir mas de un producto diferente se le debe agregar otro objeto al array con sus 2 propiedades(productId y amount)
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                        example: 1
                      amount:
                        type: integer
                        example: 2
                    
                paymentMethodId:
                  type: integer
                  example: 1
                addressId:
                  type: integer
                  example: 1

  /orders/history:
    get:
      tags:
        - Pedidos/Orders
      summary: Ver historial
      description: Permite a los usuarios ver su historial
      responses:
          "201":
            description: Pedido modificado
          "400":
            description: Debes logearte y tu token tiene que ser valido
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': token invalido'}
      parameters:
            
          - name: authorization
            in: header
            schema:
              type: string
            required: true
            description : Ingresar el token del Login

## productos

  /products:
    get:
      tags:
        - Productos/Products 
      summary: Ver todos los productos
      description: Permite a los administradores ver el menu de los productos existentes
      responses:
          "200":
            description: Muestra los productos
          "400":
            description: Debes logearte y tu token tiene que ser valido
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': token invalido'}
      parameters:
      
          - name: authorization
            in: header
            schema:
              type: string
            required: true
            description : Ingresar el token del Login
        
  /products/add:
    post:
      tags:
        - Productos/Products 
      summary: Agregar producto
      description: Permite agregar productos. Requiere ser ADMIN
      responses:
          "200":
            description: Agrega un producto
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Producto agregado!}
          "400":
            description: Se requiere de estar logeado  y ser administrador
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': No estas logeado'}
      parameters:
          - in: path
            name: id
            schema:
              type: integer
            required: true
            description: ingresar el  ID del usuario
          
          - name: authorization
            in: header
            schema:
              type: string
            required: true
            description : Ingresar el token del Login
      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nombre del producto
                  example: Choripan
                price:
                  type: integer
                  description: Precio del producto
                  example: 500
                available:
                  type: boolean
                  description: Se indica si el producto esta disponible
                  example: true

  /products/{productid}:
    put:
      tags:
        - Productos/Products 
      summary: Modificar producto
      description: Permite a los administradores modificar productos
      responses:
          "200":
            description: Modifica un producto
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Producto modificado!}
          "400":
            description: Se requiere de estar logeado, ser administrador y el producto debe existir
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': El id del producto no existe'}
      parameters:

          - in: path
            name: productid
            schema:
              type: integer
            required: true
            description: Ingresar el id del producto a modificar
         
          - name: authorization
            in: header
            schema:
              type: string
            required: true
            description : Ingresar el token del Login
      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nombre del producto
                  example: Choripan
                price:
                  type: integer
                  description: Precio del producto
                  example: 500
                available:
                  type: boolean
                  description: Se indica si el producto esta disponible
                  example: true

   
    get:
      tags:
        - Productos/Products 
      summary: Busca un producto por su id
      description: Permite a buscar un producto por su Id
      responses:
          "200":
            description: Elimina un producto
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Producto eliminado!}
          "400":
            description: Se requiere de estar logeado, ser administrador y el producto debe existir
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': El id del producto no existe'}
      parameters:
    
        - in: path
          name: productid
          schema:
            type: integer
          required: true
          description: Ingresar el id del producto para mostrarlo
           
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          description : Ingresar el token del Login

  /products/delete/{productid}:
    delete:
      tags:
        - Productos/Products 
      summary: Eliminar producto
      description: Permite a los administradores eliminar productos
      responses:
          "200":
            description: Elimina un producto
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Producto eliminado!}
          "400":
            description: Se requiere de estar logeado, ser administrador y el producto debe existir
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': El id del producto no existe'}
      parameters:
    
        - in: path
          name: productid
          schema:
            type: integer
          required: true
          description: Ingresar el id del producto a modificar
     
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          description : Ingresar el token del Login

  
  /payment:
    get:
      tags:
        - Metodo de pagos/Payment Methods 
      summary: Ver metodos de pago
      description: Permite a los usuarios ver los metodos de pago
      
      responses:
          "200":
            description: Muestra los metodos de pago
          "400":
            description: Debes logearte y tu token tiene que ser valido
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': token invalido'}
      parameters:
          - name: authorization
            in: header
            schema:
              type: string
            required: false
            description : Ingresar el token del Login
        
  /payment/create:
    post:
      tags:
        - Metodo de pagos/Payment Methods 
      summary: Crear metodo de pago
      description: Permite a los administradores crear metodos de pago
      parameters:
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          description : Ingresar el token del Login
      responses:
          "200":
            description: Metodo de pago creado
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Metodo de pago creado!}
          "400":
            description: Debes logearte, tu token tiene que ser valido y debes ser admininstrador
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': token invalido'}
      
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                method:
                  type: string
                  description: Nombre del metodo de pago
                  example: Bitcoin

  /payment/{paymentMethodid}:
    put:
      tags:
        - Metodo de pagos/Payment Methods 
      summary: Editar metodo de pago
      description: Permite a los administradores editar metodos de pago
      
      responses:
          "200":
            description: Modifica los metodos de pago
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Metodo de pago creado!}
          "400":
            description: Debes logearte y tu token tiene que ser valido y el id del metodo de pago debe existir
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': token invalido'}
      parameters:
          
          - in: path
            name: paymentMethodid
            schema:
              type: integer
            required: true
            description: Ingresar el ID del metodo de pago
          - name: authorization
            in: header
            schema:
              type: string
            required: false
            description : Ingresar el token del Login

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                method:
                  type: string
                  description: Nombre del metodo de pago
                  example: MercadoPago
                id:
                  type: integer
                  description: Id del metodo de pago
                  example: 1

  /payment/delete/{paymentMethodid}:
    delete:
      tags:
        - Metodo de pagos/Payment Methods 
      summary: Eliminar metodo de pago
      description: Permite a los administradores eliminar metodos de pago
      parameters:
        - name: authorization
          in: header
          schema:
            type: string
          required: false
          description : Ingresar el token del Login
        - in: path
          name: paymentMethodid
          schema:
            type: integer
          required: true
          description: Ingresar el ID del metodo de pago
      responses:
          "200":
            description: Modifica los metodos de pago
            content:
              application/json:
                schema:
                  type: object
                  example: {'message': Metodo de pago eliminado!}
          "400":
            description: Debes logearte y tu token tiene que ser valido y el id del metodo de pago debe existir
            content:
              application/json:
                schema:
                  type: object
                  example: {'error': No eres administrador para acceder'}